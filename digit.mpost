%
% digits
%
% die Bilder werden in der Form digit.xnn erzeugt,
% wobei x von 0 bis 9 läuft und nn von 00 bis 59.
%
% von 01 bis 30 Veränderung der alten Form, von 31 bis 59
% Veränderung zur neuen, bei 00 dann neue Form
%

outputtemplate := "%j-%c.mps";

numeric f;   % [f]rame rate
numeric m;   % [m]orph factor
numeric t;   % [t]ension
numeric phi; % rotation angle [phi]
numeric u;   % [u]nit
u := 5cm;
numeric d,q;
pair C;      % [C]enter of rotation
C := (0,0.5u);
pen pc;      % [p]en[c]ircle
pc := pencircle scaled 0.1u;

%
% TODO:
%
% * Übergang 3/4 besser
% * Oberlinie 5 auf y=0.85
% * Rundung bei der 6 elliptisch, Scheitelpunkte auf y= 0 und y = 0.85
% * Geschwindigkeit der Übergänge: langsam von der Ziffer weg, schnell zur nächsten hin
% * Koordinatenbrüche nach 3 
% * Übergang 1 ->2 Teil 2, Rundung oben eventuell mit tension modellieren

def draw_grid(expr u) =
    draw (-0.6u,-u) -- (-0.6u,1.7u) -- (0.6u,1.7u) -- (0.6u,-u) -- cycle;
    draw (-0.6u,0) -- (0.6u,0);
    draw (-0.6u,0.85u) -- (0.6u,0.85u);
    draw (-0.25u,-u)--(-0.25u,1.7u);
    draw (0.25u,-u)--(0.25u,1.7u);
enddef;

def accel(expr x) = sqrt x enddef;

def decel(expr x) = x*x enddef;

%
% Null
%
beginfig(000);
   draw_grid(u);
   pickup pc;

   z21 = (0.25u,0.425u);
   z12 = (-0.25u,0.425u);
   z1 = (0,0.85u);
   z2 = (0,0);

   draw z1 .. z12 .. z2 .. z21  .. cycle;
endfig;

%
% Null -> Eins (1/2)
%
for i = 001 upto 030:
    beginfig(i);
       draw_grid(u);
       pickup pc;

       f := i/30;
       m := f;
       z21 = ((0.25-0.245m)*u,0.425u); %.245 statt .25 um einen Glitch (i=30) zu vermeiden
       z12 = ((-0.25+0.245m)*u,0.425u);
       z1 = (0,0.85u);
       z2 = (0,0);

       draw z1 ... z12 ... z2 ... z21 ... cycle;
    endfig;
endfor

%
% Null -> Eins (2/2)
%
for i = 031 upto 059:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-30)/30;
       m := decel(f);

       z1 = (-0.25m*u,(0.85-0.3m)*u); % war z12
       z12 = (0,0.85u); % war z1
       z2 = (0,0);

       draw z1 -- z12 -- z2;    
    endfig;
endfor

%
% Eins
%
beginfig(100);
   draw_grid(u);
   pickup pc;

   z1 = (-0.25u,0.55u);
   z12 = (0,0.85u); % war z12
   z2 = (0,0); % war z3

   draw z1 -- z12 -- z2;
endfig;

%
% Eins -> Zwei (1/2)
%
for i = 101 upto 130:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-100)/30;
       m := decel(f);

       z1 = (-0.25u,0.55u);
       z12 = (0.25m*u,(0.85-0.3m)*u);
       z2 = (-0.25m*u,0);
   
       draw z1 -- z12 -- z2;
    endfig;
endfor

%
% Eins -> Zwei (2/2)
%
for i = 131 upto 159:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       
       f := (i-130)/30;
       m := accel(f);
       t := 1/m;
       
       z1 = ((-0.25+0.025m)*u,0.55u);
       z12 = (0,(0.55+0.3f)*u); % Scheitelpunkt
       z2 = ((0.25-0.025m)*u,0.55u); % war z12
       z3 = (-0.25u,0); % war z2
       z4 = ((0.5m-0.25)*u,0);
       
       draw z1  .. tension t .. z12 .. tension t .. z2 .. tension 2t .. z3;
       draw z3 -- z4;
    endfig;
endfor

%
% Zwei
%
beginfig(200);
   draw_grid(u);
   pickup pc;
   
   z1 = (-0.225u,0.55u);
   z12 = (0,0.85u);
   z2 = (0.225u,0.55u);
   z3 = (-0.25u,0);
   z4 = (0.25u,0);

   draw z1  .. z12 .. z2 .. tension 2 .. z3;
   draw z3 -- z4;
endfig;

%
% Zwei -> Drei (1/2)
%
for i = 201 upto 230:
    beginfig(i);
       draw_grid(u);
       pickup pc;         
       f := (i-200)/30;
       m := decel(f);
       phi := -90m;

       z1 = (-0.225u,0.55u);
       z12 = (0,0.85u);
       z2 = (0.225u,0.55u);
       z3 = (-0.25u,0);
       z4 = ((0.25+0.05m)*u,0);
       
       draw z1  .. z12 .. z2 .. tension 2 .. z3;
       draw z3 -- z4 rotatedaround (z3,phi);
    endfig;
endfor

%
% Zwei -> Drei (2/2)
%
for i = 231 upto 259:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-230)/30;
       m := decel(f);
       t := 1/m;
       
       z1 = ((-0.225-0.025m)*u,(0.55+0.1m)*u);
       z12 = (0,0.85u);
       z2 = ((0.225+0.025m)*u,(0.55-0.05m)*u);
       z3 = ((-0.25+0.1m)*u,0);
       z34 = ((-0.25+0.55m)*u,(-0.325-0.375m)*u);
       z4 = ((-0.25-0.05m)*u,(-0.55-0.15m)*u);
       
       draw z1 .. z12 .. z2 .. tension (2-m) .. z3;
       draw z3 .. z34 .. z4;
    endfig;
endfor

%
% Drei
%
beginfig(300);
   draw_grid(u);
   pickup pc;
   
   z1 = (-0.25u,0.65u);
   z12 = (0,0.85u);
   z2 = (0.25u,0.5u);
   z3 = (-0.15u,0);
   z34 = (0.3u,-0.7u);
   z4 = (-0.3u,-0.7u);

   draw z1 .. z12 .. z2 .. z3;
   draw z3 .. z34 .. z4;
endfig;

% BRUCH!

%
% Drei -> Vier (1/2)
%
for i = 301 upto 330:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       
       f := (i-300)/30;
       t := 10*f*f; if t < 1: t := 1 fi;

       z1 = ((0.1f-0.25)*u,(0.65-0.65f)*u);
       z12 = (0.25u,0.65u);
       z2 = (-0.15u,0);
       z23 = (0.25u,(-0.65+0.65f)*u);
       z3 = (-0.25u,-0.65u);

       draw z1 .. tension t .. z12 .. {dir 180}z2 if i=330: .. cycle fi;
       draw z2{dir 0} .. z23 .. z3;
    endfig;
endfor

%
% Drei -> Vier (2/2)
%
for i = 331 upto 359:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       
       f := (i-330)/30;
       t := 100*f*f; if t < 1: t := 1 fi;
       
       z1 = (-0.15u,0);
       z12 = (0.25u,0.65u);
       z2 = ((0.4f-0.15)*u,0);
       z23 = z4 = (0.25u,0);
       z3 = ((-0.25+0.5f)*u,-0.65u);
       z5 = ((0.25+0.15f*f)*u,0);

       draw z1 .. tension 100 .. z12 .. tension t .. {dir 180}z2 -- cycle;
       draw z2{dir 0}  ..  z23 .. tension t .. z3;
       draw z4 -- z5;
       
    endfig;
endfor    

%
% Vier
%
beginfig(400);
   draw_grid(u);
   pickup pc;
   
   z1 = (-0.15u,0);
   z13 = z12 = (0.25u,0.65u);
   %z2 = (0.25u,0);
   %z4 = z23 = (0.25u,0);
   z3 = (0.25u,-0.85u);
   z5 = (0.4u,0);

   draw z5 -- z1 -- z13 -- z3;       
endfig;

%
% Vier -> Fünf (1/2)
%
for i = 401 upto 430:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-400)/30;
       
       z1 = (-0.15u,0);
       z21 = z12 = (0.25u,0.65u);
       z2 = (0.25u,0.75f*u);
       z13 = z4 = (0.25u,0u);
       z3 = (0.25u,-0.85u);
       z5 = ((0.4-0.15f)*u,0);

       draw z2 -- z21 -- z1 -- z13 -- z3;
       draw z4 -- z5;
       
    endfig;
endfor

%
% Vier -> Fünf (2/2)
%
for i = 431 upto 459:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-430)/30;
       t := 30-30*sqrt(f); if t < 1: t := 1 fi;
       
       z1 = (-0.15u,0);
       z12 = ((0.25-0.4f)*u,0.65u);
       z2 = (0.25u,0.75u);
       z13 = (0.25u,-0.15f*u);
       z3 = ((0.25-0.4f)*u,-0.85u);

       draw z1 -- z12 -- z2;
       draw z1 .. tension t .. z13 .. tension t .. z3;
    endfig;
endfor    

%
% Fünf
%
beginfig(500);
   draw_grid(u);
   pickup pc;
   
   z1 = (-0.25u,0);
   z12 = (-0.25u,0.75u);
   z2 = (0.25u,0.75u);
   z13 = (0.25u,-0.15u);
   z3 = (-0.25u,-0.85u);

   draw z1 -- z12 -- z2;
   draw z1 .. z13 .. z3;
endfig;

%
% Fünf -> Sechs (1/2)
%
for i = 501 upto 530:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-500)/30;
              
       z1 = ((-0.25-0.15f)*u,0.35f*u);
       z12 = ((-0.25-0.15f)*u,(0.75+0.75f)*u);
       z2 = (0.25u,(0.75+0.75f)*u);
       z13 = ((0.25+0.15f)*u,(-0.15+0.6f)*u);
       z3 = ((-0.25-0.15f)*u,(-0.85+0.85f+0.35f)*u);

       draw z1 -- z12 -- z2;
       draw z1 .. z13 .. z3 if i=530: .. cycle fi;
    endfig;
endfor

%
% Fünf -> Sechs (2/2)
%
for i = 531 upto 559:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-530)/30;
       t := 1/f; 
              
       z1 = z3 = (-0.4u,0.4u);
       z12 = ((-0.4+0.3f)*u,(1.5-0.25f)*u);
       z2 = (0.25u,1.5u);
       z13 = (0.4u,0.4u);
      
       draw z1 .. tension t .. z12 .. tension t .. z2;
       draw z1 .. z13 .. cycle;
    endfig;
endfor

% BRUCH

%
% Sechs
%
beginfig(600);
   draw_grid(u);
   pickup pc;
   
   % der Abstand vom Zentrum zur Schwungspitze in y-Richtung
   % ist bei der Sechs mit 1.5-0.425=1.075 geringer
   % als bei der Neun: 0.425-(-0.75)=1.175
   
   z1 = (0.25u,1.5u); % war z2
   z23 = (-0.375u,0.425u); % war z1
   z32 = (0.375u,0.425u); % war z13
   z2 = (0,0.85u);
   z3 = (0,0);
   
   draw z2 .. z23 .. z3 .. z32  .. cycle;
   draw z23{up} .. z1;
endfig;

%
% Sechs -> Sieben (1/2)
%
C := (0,0.425u);

for i = 601 upto 630:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-600)/30;
       m := f;
       q := 3*m*m-3*m+1;
         % Parabelabschnitt y = 1 .. 1/4 .. 1 für x = 0 .. 0.5 .. 1;
       phi := 180m;
       
       z13 = (-0.375u,0.425u) rotatedaround (C,phi); % war z23
       z1 = (0.25u,(1q + 0.5)*u) rotatedaround (C,phi);
       z32 = (0.375u,0.425u) rotatedaround (C,phi/2);
       z2 = (0,0.85u) rotatedaround (C,phi/4);
       z3 = (0,(0+0.0m)*u) rotatedaround (C,3phi/4);
       z23 = ((-0.375+0.125m)*u,(0.425+0.075m)*u);
       % Nach der Rotation gilt:
       % z1'=(-0.25u,-0.65u);
       % z13'=(0.375u,0.425u);
       % z32'=(0,0.8u);
       % z2'=(-0.3,0.725); weil 0.425/sqrt(2)=0.30!
       % z3'=(0.3,0.725);
       
       draw z1 .. z13{dir (phi-90)} .. z3 ... z32  ... z2 ... z23; 
    endfig;
endfor

%
% Sechs -> Sieben (2/2)
%


for i = 631 upto 659:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-630)/30;
       t := 30 * f * f; if t < 1: t :=1 fi;
              
       z1 = (0.3u,(0.725+0.125f)*u); % war z3
       z21 = ((0.375-0.275f)*u,(0.425-0.275f)*u); % war z13
       z2 = ((-0.25+0.25f)*u,(-0.65-0.1f)*u); % war z1
       z13 = (-0.3u,(0.725+0.125f)*u); % war z2
       z3 = ((-0.25-0.05f)*u,(0.5+0.25f)*u); % war z23
       z32= (0,(0.8+0.05f)*u); % liegt dann genau zwischen neu z1 und z13 und fällt dann weg
       
       % Der Tangentenwinkel an z1↓ beträgt näherungsweise 135° und soll auf 90°=up verkürzt werden
       draw z2 .. z21 .. z1{dir (135-45f)} .. tension t .. z32{dir 180} .. tension t .. z13 .. tension t .. z3;
    endfig;
endfor

%
% Sieben
%
beginfig(700);
   draw_grid(u);
   pickup pc;
   
   z1 = (0.3u,0.85u);
   z21 = (0.1u,0.15u);
   z2 = (0u,-0.75u);
   z13 = (-0.3u,0.85u);
   z3 = (-0.3u,0.75u);
      
   draw z2 .. z21 .. z1{up} -- z13 -- z3;
      
endfig;

%
% Sieben -> Acht (1/2)
%
for i = 701 upto 730:
    beginfig(i);
       numeric tmp;
       pair inter;
       path seven;
    
       draw_grid(u);
       pickup pc;
       f := (i-700)/30;
       
       z1 = (0.3u,0.85u);
       z21 = (0.1u,0.15u);
       z2 = (0u,-0.75u);
       z13 = (-0.3u,0.85u);
       z3 = (-0.3u,(0.75+0.1f)*u); % wandert zu z31 und ersetzt diesen
         
       seven := z2 .. tension 1 .. z21 .. tension 1 .. z1{up} -- z13 -- z3;
       
       inter := ((-infinity,0)--(infinity,0)) intersectionpoint seven;
       tmp := xpart( inter );
       
       z4 = (tmp+(-0.25u-tmp)*f,0);
       z5 = (tmp+(0.25u-tmp)*f,0);
       
       draw seven;
       draw z4 -- z5; 
      
    endfig;
endfor

%
% Sieben -> Acht (2/2)
%
for i = 731 upto 759:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-730)/30;
       m := decel( f);
       t := 1/f; 
       tt := t/2; if tt < 1: tt := 1 fi;
       
       % schiebe um 0.85u nach oben
       z1 = (0.3u,(0.85-0.5m+0.85m)*u);
       z21 = ((0.1-0.5m)*u,(0.15-0.65m+0.85m)*u);
       z2 = (0.4m*u,(-0.75+0.25m+0.85m)*u);
       z3 = (-0.3u,(0.85-0.35m+0.85m)*u);       
       z4 = ((-0.25-0.05m)*u,(0.35m+0.85m)*u);
       z45 = (0,0.85m*u);
       z5 = ((0.25+0.15m)*u,(-0.5m+0.85m)*u);
       
       draw z2 .. z21 .. z1{up} .. tension t .. z3;
       draw z4{down} .. tension tt .. z45 .. tension tt .. {down}z5;
       
    endfig;
endfor

%
% Acht
%
beginfig(800);
   draw_grid(u);
   pickup pc;
   
   z12 = z34 = (0,0.85u); % war z45
   z1 = (0.3u,1.25u);
   z2 = (-0.4u,0.35u); % war z21
   z3 = (0.4u,0.35u);
   z4 = (-0.3u,1.25u);
   z23 = (0,0);
   
   draw z1 .. z12 .. z2 .. z23 .. z3 .. z34 .. z4 .. cycle;
      
endfig;

%
% Acht -> Neun (1/2)
%

C := (0,0.425u);
for i = 801 upto 830:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-800)/30;
       m := f;
       phi := -90m*m;
       
       z12 = z34 = (0,(0.85-0.05m)*u) rotatedabout (C,phi);
       z1 = ((0.3-0.3m)*u,(1.25-0.45m)*u) rotatedabout (C,phi);
       z2 = ((-0.4-0.025m)*u,(0.35+0.125m)*u) rotatedabout (C,phi);
       z23 = (0,(0+0.05m)*u) rotatedabout (C,phi);
       z3 = ((0.4+0.025m)*u,(0.35+0.125m)*u) rotatedabout (C,phi);
       z4 = ((-0.3+0.3m)*u,(1.25-0.45m)*u) rotatedabout (C,phi);
       
       % Wir ändern die Punktreihenfolge, um bei i=830 eine geschlossene Schleife
       % zu bekommen:
       draw z2 .. z23 .. z3 .. z34 .. if i < 830: z4 .. z1 .. z12 .. fi cycle;
      
    endfig;
endfor

%
% Acht -> Neun (2/2)
%
for i = 831 upto 859:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-830)/30;
       m := accel(f);
              
       z23 = (-0.375u,0.425u);         
       z32 = (0.375u,0.425u); % war z12 und z34
       z1 = ((0.425-0.675m*m)*u,(0.425-1.175m)*u);
       z2 = (0,0.85u);
       z3 = (0,0);
       
       draw z2 .. z23 .. z3 .. z32  .. cycle;
       draw z32{down} .. z1;
      
    endfig;
endfor


%
% Neun
%
beginfig(900);
   draw_grid(u);
   pickup pc;
            
   z23 = (-0.375u,0.425u);         
   z32 = (0.375u,0.425u);
   z1 = (-0.25u,-0.75u);
   z2 = (0,0.85u);
   z3 = (0,0);
      
   draw z2 .. z23 .. z3 .. z32  .. cycle;
   draw z32{down} .. z1;
      
endfig;

%
% Neun -> Null (1/2)
%
for i = 901 upto 930:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-900)/30;
       m := decel(f);
       q := -4*f*f+4f+1; % Scheitel bei (0.5,2), f(0)=f(1)=1
       
       z23 = (-0.375u,0.425u);
       z32 = (0.375u,0.425u);
       z1 = ((-0.25-0.125q)*u,(-0.75+1.175m)*u);
       z2 = (0,0.85u);
       z3 = (0,0);
       
       draw z2 .. z23 .. z3 .. z32  .. cycle;
       draw z32{down} .. if i > 925 : z3 .. fi z1;
      
    endfig;
endfor

%
% Neun -> Null (2/2)
%
for i = 931 upto 959:
    beginfig(i);
       draw_grid(u);
       pickup pc;
       f := (i-930)/30;
       m := accel(f);
       
       z32 = ((0.375-0.125m)*u,0.425u);
       z23 = ((-0.375+0.125m)*u,0.425u);
       z2 = (0,0.85u);
       z3 = (0,0);
       
       draw z2 .. z23 .. z3 .. z32  .. cycle;
      
    endfig;
endfor

end;
